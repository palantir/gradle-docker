buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }
    dependencies {
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.5.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.33.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.11.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.4.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.38.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.16.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:5.28.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:3.0.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '0.16.0'
}
allprojects {
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.jakarta-package-alignment'
}

repositories {
    mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.git-version'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.jdks.latest'

group 'com.palantir.gradle.docker'
version System.env.CIRCLE_TAG ?: gitVersion()

dependencies {
    api gradleApi()
    api 'com.google.guava:guava'

    testImplementation gradleTestKit()
    testImplementation 'com.netflix.nebula:nebula-test'
}


pluginBundle {
    website = 'https://github.com/palantir/gradle-docker'
    vcsUrl = 'https://github.com/palantir/gradle-docker'
    description = 'Gradle Docker is a simple docker orchestrator for executing docker build and push from within Gradle.'
    tags = ['docker']

    plugins {
        dockerPlugin {
            id = 'com.palantir.docker'
            displayName = 'Palantir Gradle Docker'
        }
        dockerComposePlugin {
            id = 'com.palantir.docker-compose'
            displayName = 'Palantir Gradle Docker-Compose'
        }
        dockerRunPlugin {
            id = 'com.palantir.docker-run'
            displayName = 'Palantir Gradle Docker-Run'
        }
    }
}

publishPlugins.onlyIf { versionDetails().isCleanTag }

// Configure the publishPlugins task
tasks.publish.dependsOn publishPlugins
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]

javaVersions {
    libraryTarget = 11
}
