buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.4.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:0.3.9'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.0.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.42.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.6.0'
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '0.16.0'
}

repositories {
    mavenCentral()
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.git-version'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.external-publish-jar'

group 'com.palantir.gradle.docker'
version System.env.CIRCLE_TAG ?: gitVersion()

dependencies {
    compile gradleApi()
    compile 'com.google.guava:guava'

    testCompile gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test'
}

sourceCompatibility = 1.8

pluginBundle {
    website = 'https://github.com/palantir/gradle-docker'
    vcsUrl = 'https://github.com/palantir/gradle-docker'
    description = 'Gradle Docker is a simple docker orchestrator for executing docker build and push from within Gradle.'
    tags = ['docker']

    plugins {
        dockerPlugin {
            id = 'com.palantir.docker'
            displayName = 'Palantir Gradle Docker'
        }
        dockerComposePlugin {
            id = 'com.palantir.docker-compose'
            displayName = 'Palantir Gradle Docker-Compose'
        }
        dockerRunPlugin {
            id = 'com.palantir.docker-run'
            displayName = 'Palantir Gradle Docker-Run'
        }
    }
}

publishPlugins.onlyIf { versionDetails().isCleanTag }

// Configure the publishPlugins task
tasks.publish.dependsOn publishPlugins
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]
