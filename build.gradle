buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://palantir.bintray.com/releases' }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-info-plugin:9.1.1'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:1.0.1'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:16.0.0'
        classpath 'com.netflix.nebula:gradle-info-plugin:9.1.1'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.26.1'
        classpath 'com.palantir.baseline:gradle-baseline-java:2.47.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '0.12.0'
}
allprojects {
    apply plugin: 'com.palantir.java-format'
}

repositories {
    jcenter()
    maven { url 'https://dl.bintray.com/palantir/releases/' }
}

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.git-version'
apply plugin: 'org.inferred.processors'
apply from: "$rootDir/gradle/publish-jar.gradle"

group 'com.palantir.gradle.docker'
version System.env.CIRCLE_TAG ?: gitVersion()

dependencies {
    compile gradleApi()
    compile 'com.google.guava:guava'

    testCompile gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test'
}

sourceCompatibility = 1.8

pluginBundle {
    website = 'https://github.com/palantir/gradle-docker'
    vcsUrl = 'https://github.com/palantir/gradle-docker'
    description = 'Gradle Docker is a simple docker orchestrator for executing docker build and push from within Gradle.'
    tags = ['docker']

    plugins {
        dockerPlugin {
            id = 'com.palantir.docker'
            displayName = 'Palantir Gradle Docker'
        }
        dockerComposePlugin {
            id = 'com.palantir.docker-compose'
            displayName = 'Palantir Gradle Docker-Compose'
        }
        dockerRunPlugin {
            id = 'com.palantir.docker-run'
            displayName = 'Palantir Gradle Docker-Run'
        }
    }
}

publishPlugins.onlyIf { versionDetails().isCleanTag }

// Configure the publishPlugins task
tasks.publish.dependsOn publishPlugins
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]
